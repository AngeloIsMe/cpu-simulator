#!/usr/bin/env python3

INSTRUCTION_COUNT = 14
FUNC_COUNT = 8

ALU_FUNC_TABLE = [
    None,   # SLL, SRL, ADD, AND, OR, XOR, SLT, MULT (Manually Handled)
    0,      # LUI   
    None,   # J
    None,   # JR
    None,   # BEQ
    None,   # BNE
    2,      # ADDI
    6,      # SLTI
    3,      # ANDI
    4,      # ORI
    2,      # LH
    2,      # SH
    None,   # MFHI
    None,   # MFLO
]

def alu_func(op, funct):
    return funct if op == 0 else ALU_FUNC_TABLE[op]

if __name__ == "__main__":
    import os
    print("# Do not edit, automatically generated by " + os.path.basename(__file__))
    print("Opcode[4] Funct[3] AluFunc[3]")
    for op in range(0, INSTRUCTION_COUNT):
        for funct in range(0, FUNC_COUNT):
            funcid = alu_func(op, funct)
            funcstr = "0x{:X}".format(funcid) if funcid is not None else ('x'*3)
            print("0x{:X} 0x{:X} {}".format(op, funct, funcstr))
